function fractured_object_struct = ...
    spheroid_fractured_object_compiler(...
                             unique_fractured_objects,...
                             fractured_object_labels,...
                             fractured_cells_from_pixels,...
                             fractured_cell_types_from_pixels,...
                             ydim,...
                             xdim,...
                             zdim,...
                             micron_scale,...
                             fractured_object_struct,...
                             struct_counter,...
                             t...
                             )

if(length(unique_fractured_objects)>0)
    fractured_object_metrics = spheroid_fractured_object_quantifier(unique_fractured_objects,fractured_object_labels,fractured_cells_from_pixels,fractured_cell_types_from_pixels,ydim,xdim,zdim);
    fractured_object_struct(struct_counter,t).no_sccs=fractured_object_metrics(:,1);
    fractured_object_struct(struct_counter,t).no_cafs=fractured_object_metrics(:,2);
    fractured_object_struct(struct_counter,t).min_object_depth=micron_scale*fractured_object_metrics(:,3);
    fractured_object_struct(struct_counter,t).max_object_depth=micron_scale*fractured_object_metrics(:,4);
else
    fractured_object_struct(struct_counter,t).no_sccs=NaN;
    fractured_object_struct(struct_counter,t).no_cafs=NaN;
    fractured_object_struct(struct_counter,t).min_object_depth=NaN;
    fractured_object_struct(struct_counter,t).max_object_depth=NaN;
end

end