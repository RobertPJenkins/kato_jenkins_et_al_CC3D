function [...
         neighbour_cell_id_t,...
         neighbour_cell_type_t,...
         neighbour_cell_scc_neighbour_t,...
         neighbour_cell_caf_neighbour_t,...
         cells_from_pixels,...
         cell_types_from_pixels,...
         binary_all_cells_from_pixels,...
         centroid_zcom...
         ] = organotypic_neighbour_fracture_data_loader(...
                                            directory,...
                                            pixel_files,...
                                            neighbour_MC_step,...
                                            neighbour_cell_id,...
                                            neighbour_cell_type,...
                                            neighbour_cell_scc_neighbour,...
                                            neighbour_cell_caf_neighbour,...
                                            centroid_zcom,...
                                            t,...
                                            time_vector,...
                                            xdim,...
                                            ydim,...
                                            zdim...
                                            )

pixel_file_t=[directory pixel_files(t+1).name]
fid = fopen(pixel_file_t,'r');
variables=fgets(fid);
fclose(fid);
fid=fopen(pixel_file_t,'r');
pixel_data_t=textscan(fid,'%f %f %f %f %f %f','Delimiter','MultipleDelimsAsOne','HeaderLines',1);
fclose(fid);
cell_id=pixel_data_t{2};
cell_type=pixel_data_t{3};
x=pixel_data_t{4};
y=pixel_data_t{5};
z=pixel_data_t{6};

find(isnan(x))
find(isnan(y))
find(isnan(z))
find(isnan(cell_id))

MC_neighbour_t_index=find(neighbour_MC_step==time_vector(t+1));
neighbour_cell_id_t=neighbour_cell_id(MC_neighbour_t_index);
neighbour_cell_type_t=neighbour_cell_type(MC_neighbour_t_index);
neighbour_cell_scc_neighbour_t=neighbour_cell_scc_neighbour(MC_neighbour_t_index);
neighbour_cell_caf_neighbour_t=neighbour_cell_caf_neighbour(MC_neighbour_t_index);

cells_from_pixels=zeros(ydim,xdim,zdim);       
cell_types_from_pixels=zeros(ydim,xdim,zdim);
binary_all_cells_from_pixels=logical(zeros(ydim,xdim,zdim));

length(cell_id)
for cell_id_index=1:length(cell_id)
    cell_id_index
    cells_from_pixels(y(cell_id_index)+1,x(cell_id_index)+1,z(cell_id_index)+1)=cell_id(cell_id_index);
    cell_types_from_pixels(y(cell_id_index)+1,x(cell_id_index)+1,z(cell_id_index)+1)=cell_type(cell_id_index);
    binary_all_cells_from_pixels(y(cell_id_index)+1,x(cell_id_index)+1,z(cell_id_index)+1)=1;
end
'here three'
%Set z distances values to be zero for no invasion
cells_from_pixels(:,:,zdim:-1:1)=cells_from_pixels;
cell_types_from_pixels(:,:,zdim:-1:1)=cell_types_from_pixels;
binary_all_cells_from_pixels(:,:,zdim:-1:1)=binary_all_cells_from_pixels;
centroid_zcom = zdim - centroid_zcom;
'here four'
end